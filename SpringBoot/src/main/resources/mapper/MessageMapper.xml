<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yuanmh.community.dao.MessageMapper">

    <sql id="selectFields">
        id
        ,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <!--    插入字段-->
    <sql id="insertFields">
        from_id
        ,to_id,conversation_id,content,status,create_time
    </sql>

    <!--    查询当前用户的会话列表，针对每个会话只返回最新的一条私信 并且分页查询
    fromId==1表示系统消息 不是私信-->
    <select id="selectConversations" resultType="Message">
        select
        <include refid="selectFields"/>
        from message where id in
        (
        select max(id)
        from message
        where status!=2
        and from_id !=1
        and (to_id = #{userId}
        or from_id = #{userId})
        group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <!--    查询当前用户的会话数量-->
    <select id="selectConversationsCount" resultType="java.lang.Integer">
        select count(m.maxId)
        from (select max(id) as maxId
              from message
              where status!=2
              and from_id !=1
              and (to_id = #{userId}
                 or from_id = #{userId})
              group by conversation_id) as m
    </select>

    <!--    查询某个会话包含的私信列表-->
    <select id="selectLetters" resultType="Message">
        select
        <include refid="selectFields"/>
        from message
        where conversation_id = #{conversationId}
        and status!=2
        and from_id!= 1
        order by id desc
        limit #{offset},#{limit}
    </select>
    <!--    查询某个会话包含的私信数量-->
    <select id="selectLettersCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where conversation_id = #{conversationId}
          and status!=2
        and from_id!= 1
    </select>

    <!--    查询未读私信数量 conversationId为空时查询所有未读私信 使用动态sql-->
    <select id="selectLettersUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0 and from_id!= 1 and to_id = #{userId}
        <if test="conversationId!= null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <!--    查询最新一条私信-->
    <select id="selectLatestMessage" resultType="Message">
        select
        <include refid="selectFields"/>
        from message
        where id in (
        select max(id)
        from message
        where status!=2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        )
    </select>
    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status!=2
                and from_id =1
                and to_id = #{userId}
          and conversation_id = #{topic}
    </select>
    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
    </select>
    <select id="selectNotices" resultType="Message">
        select
        <include refid="selectFields"/>
        from message
        where status !=2
        and from_id =1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <!--    添加私信-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"/>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <!--    更新私信状态-->
    <update id="updateStatus" parameterType="java.lang.Integer">
        update message
        set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


</mapper>